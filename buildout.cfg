[buildout]
parts =
    cmake-download
    cmake
    openjpeg-download
    openjpeg
    geos
    json-c
    proj4
    hdf
    netcdf
    jpeg
    tiff
    gdal

[cmake-download]
recipe = hexagonit.recipe.download
url = https://www.cmake.org/files/v3.10/cmake-3.10.2.tar.gz
destination = ${buildout:directory}/src/cmake

[cmake]
recipe = plone.recipe.command
command =
    cd ${cmake-download:location}/cmake-3.10.2; \
    ./bootstrap --prefix=${buildout:directory}/parts/cmake; \
    make; make install
stop-on-error = yes

[openjpeg-download]
recipe = hexagonit.recipe.download
url = https://github.com/uclouvain/openjpeg/archive/v2.3.0.tar.gz
destination = ${buildout:directory}/src/openjpeg

[openjpeg]
=> cmake openjpeg-download
recipe = plone.recipe.command
command =
    cd ${openjpeg-download:location}/openjpeg-2.3.0; \
    mkdir -p build; \
    cd build; \
    ${buildout:directory}/parts/cmake/bin/cmake .. -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_OSX_ARCHITECTURES="x86_64;i386" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${buildout:directory}/parts/openjpeg; \
    make install; \
    make clean
stop-on-error = yes

[geos]
recipe = hexagonit.recipe.cmmi
url = http://download.osgeo.org/geos/geos-3.6.2.tar.bz2
environment =
    MACOSX_DEPLOYMENT_TARGET=10.9
configure-options = 
    CFLAGS="-arch i386 -arch x86_64 -O2 -Wl,-S -Wall -Wstrict-prototypes"
    CXXFLAGS="-arch i386 -arch x86_64 -O2 -Wl,-S -Wall -Wstrict-prototypes"
    LDFLAGS="-arch i386 -arch x86_64"

[json-c]
recipe = hexagonit.recipe.cmmi
url = https://s3.amazonaws.com/json-c_releases/releases/json-c-0.12.tar.gz
environment =
    MACOSX_DEPLOYMENT_TARGET=10.9
configure-options =
    CFLAGS="-arch i386 -arch x86_64 -O2"
    CXXFLAGS="-arch i386 -arch x86_64 -O2"
    LDFLAGS="-arch i386 -arch x86_64"

[proj4]
recipe = hexagonit.recipe.cmmi
url = http://download.osgeo.org/proj/proj-4.9.3.tar.gz
environment =
    MACOSX_DEPLOYMENT_TARGET=10.9
patches = ${buildout:directory}/patches/bd6cf7d527ec88fdd6cc3f078387683d683d0445.diff
patch-options = -u --verbose -p1
configure-options =
    CFLAGS="-arch i386 -arch x86_64 -O2"
    CXXFLAGS="-arch i386 -arch x86_64 -O2"
    LDFLAGS="-arch i386 -arch x86_64"

[hdf]
recipe = hexagonit.recipe.cmmi
url = https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.1/src/hdf5-1.10.1.tar.gz
environment =
    MACOSX_DEPLOYMENT_TARGET=10.9
configure-options =
    CFLAGS="-arch i386 -arch x86_64 -O2 -Wl,-S"
    CXXFLAGS="-arch i386 -arch x86_64 -O2 -Wl,-S"
    LDFLAGS="-arch i386 -arch x86_64"
    --enable-shared
    --enable-build-mode=production

[netcdf]
=> hdf
recipe = hexagonit.recipe.cmmi
url = https://github.com/Unidata/netcdf-c/archive/v4.4.1.1.tar.gz
environment =
    MACOSX_DEPLOYMENT_TARGET=10.9
configure-options =
    CFLAGS="-arch i386 -arch x86_64 -O2 -Wl,-S -I${buildout:directory}/parts/hdf/include"
    CXXFLAGS="-arch i386 -arch x86_64 -O2 -Wl,-S -I${buildout:directory}/parts/hdf/include"
    LDFLAGS="-arch i386 -arch x86_64 -L${buildout:directory}/parts/hdf/lib"

[jpeg]
recipe = hexagonit.recipe.cmmi
url = http://www.ijg.org/files/jpegsrc.v9c.tar.gz
environment =
    MACOSX_DEPLOYMENT_TARGET=10.9
configure-options =
    CFLAGS="-arch i386 -arch x86_64 -O2"
    CXXFLAGS="-arch i386 -arch x86_64 -O2"
    LDFLAGS="-arch i386 -arch x86_64"

[tiff]
=> jpeg
recipe = hexagonit.recipe.cmmi
url = http://download.osgeo.org/libtiff/tiff-4.0.9.tar.gz
environment =
    MACOSX_DEPLOYMENT_TARGET=10.9
configure-options =
    CFLAGS="-arch i386 -arch x86_64 -O2"
    CXXFLAGS="-arch i386 -arch x86_64 -O2"
    LDFLAGS="-arch i386 -arch x86_64"
    --with-jpeg-include-dir=${buildout:directory}/parts/jpeg/include
    --with-jpeg-lib-dir=${buildout:directory}/parts/jpeg/lib

[webp]
=> tiff
recipe = hexagonit.recipe.cmmi
url = https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-0.6.1.tar.gz
environment =
    MACOSX_DEPLOYMENT_TARGET=10.9
configure-options =
    CFLAGS="-arch i386 -arch x86_64 -O2 -Wl,-S"
    CXXFLAGS="-arch i386 -arch x86_64 -O2 -Wl,-S"
    LDFLAGS="-arch i386 -arch x86_64"
    --with-tiffincludedir=${buildout:directory}/parts/tiff/include
    --with-tifflibdir=${buildout:directory}/parts/tiff/lib

[gdal]
=> openjpeg geos json-c proj4 netcdf webp
recipe = hexagonit.recipe.cmmi
url = http://download.osgeo.org/gdal/2.2.4/gdal-2.2.4.tar.gz
environment =
    MACOSX_DEPLOYMENT_TARGET=10.9
# patches =
# patch-options = -u --verbose -p4
configure-options =
    CFLAGS="-arch i386 -arch x86_64 -O2 -Wall -Wstrict-prototypes"
    CXXFLAGS="-arch i386 -arch x86_64 -O2 -Wall -Wstrict-prototypes"
    LDFLAGS="-arch i386 -arch x86_64"
    --with-threads
    --disable-debug
    --disable-static
    --without-grass
    --without-libgrass
    --without-jpeg12
    --without-jasper
    --with-netcdf=${buildout:directory}/parts/netcdf
    --with-openjpeg=${buildout:directory}/parts/openjpeg
    --with-libtiff=${buildout:directory}/parts/tiff
    --with-webp=${buildout:directory}/parts/webp
    --with-jpeg
    --with-gif
    --with-png
    --with-geotiff=internal
    --with-sqlite3=/usr
    --with-pcraster=internal
    --with-pcraster=internal
    --with-pcidsk=internal
    --with-bsb
    --with-grib
    --with-pam
    --with-geos=${buildout:directory}/parts/geos/bin/geos-config
    --with-static-proj4=${buildout:directory}/parts/proj4
    --with-expat=/usr
    --with-libjson-c=${buildout:directory}/parts/json-c
    --with-libiconv-prefix=/usr
    --with-libz=/usr
    --with-curl=/usr/bin/curl-config
    --without-python
pre-make-hook = ${buildout:directory}/hooks.py:staticgeos
make-options =
    -j 8
